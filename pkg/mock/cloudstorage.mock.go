// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/operator/pkg/cloudstorage (interfaces: Manager)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha2 "github.com/libopenstorage/operator/pkg/apis/core/v1alpha2"
	cloudstorage "github.com/libopenstorage/operator/pkg/cloudstorage"
	reflect "reflect"
)

// MockManager is a mock of Manager interface
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// GetStorageNodeConfig mocks base method
func (m *MockManager) GetStorageNodeConfig(arg0 *v1alpha2.CloudStorageSpec) (*cloudstorage.Config, error) {
	ret := m.ctrl.Call(m, "GetStorageNodeConfig", arg0)
	ret0, _ := ret[0].(*cloudstorage.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStorageNodeConfig indicates an expected call of GetStorageNodeConfig
func (mr *MockManagerMockRecorder) GetStorageNodeConfig(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageNodeConfig", reflect.TypeOf((*MockManager)(nil).GetStorageNodeConfig), arg0)
}
